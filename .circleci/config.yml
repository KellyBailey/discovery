# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/python:2.7
      - image: circleci/postgres:9.3
        environment:
          POSTGRES_DB: circle-test
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: circleci

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - 3-python-dep-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
            - 3-python-dep-{{ checksum "requirements.txt" }}
            - 3-python-dep-
      - run:
          name: Install Python dependencies
          command: |
            bash scripts/setup-python.sh /dev/stderr
      - save_cache:
          paths:
            - /venv
          key: 3-python-dep-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}

      - restore_cache:
          key: 2-phantomjs-2-1-1
      - run:
          name: Install PhantomJS
          command: |
            bash scripts/setup-phantomjs.sh /dev/stderr
      - save_cache:
          key: 2-phantomjs-2-1-1
          paths:
            - /usr/local/bin/phantomjs

      - run:
          name: Set CircleCI configuration
          command: |
            cp discovery/local_settings.circle.py discovery/local_settings.py

      - run:
          name: Run tests
          command: |
            source /venv/bin/activate
            /venv/bin/python manage.py test api vendors contract

      - store_artifacts:
          path: logs
          destination: test-reports

  deploy-dev:
    docker:
      - image: circleci/python:2.7
        environment:
          LOGIN_URL: 'https://api.fr.cloud.gov'

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Setup CloudFoundry client CLI
          command: |
            bash scripts/setup-cf.sh

      - run:
          name: Deploy development applications
          command: |
            bash scripts/deploy-dev.sh

  deploy-prod:
    docker:
      - image: circleci/python:2.7
        environment:
          LOGIN_URL: 'https://api.fr.cloud.gov'

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Setup CloudFoundry client CLI
          command: |
            bash scripts/setup-cf.sh

      - run:
          name: Deploy production applications
          command: |
            bash scripts/deploy-prod.sh

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - deploy-dev:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy-prod:
          requires:
            - test
          filters:
            branches:
              only: master
