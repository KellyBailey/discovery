# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
# TODO: Get rid of all this CircleCI caching in favor of extended Docker images
#
version: 2
jobs:
  unit-tests:
    docker:
      - image: circleci/python:2.7
      - image: circleci/postgres:9.3
        environment:
          POSTGRES_DB: circle-test
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: circleci

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.git

      - restore_cache:
          key: v5-python-dep-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            bash -c "sudo scripts/setup-python.sh /dev/stderr ~/venv"
      - save_cache:
          key: v5-python-dep-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
          paths:
            - ~/venv

      - run:
          name: Set CircleCI configuration
          command: |
            cp discovery/local_settings.circle.py discovery/local_settings.py

      - run:
          name: Run unit tests
          command: |
            source ~/venv/bin/activate
            ~/venv/bin/python manage.py test api vendors contract

      - store_artifacts:
          path: logs
          destination: unit-test-reports

  acceptance-tests:
    docker:
      - image: circleci/python:2.7
      - image: circleci/postgres:9.3
        environment:
          POSTGRES_DB: circle-test
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: circleci

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.git

      - restore_cache:
          key: v5-python-dep-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            bash -c "sudo scripts/setup-python.sh /dev/stderr ~/venv"
      - save_cache:
          key: v5-python-dep-{{ checksum "requirements.txt" }}-{{ checksum "requirements-test.txt" }}
          paths:
            - ~/venv

      - restore_cache:
          key: v4-phantomjs-2-1-1
      - run:
          name: Install PhantomJS
          command: |
            bash -c "sudo scripts/setup-phantomjs.sh /dev/stderr ~/venv/bin"
      - save_cache:
          key: v4-phantomjs-2-1-1
          paths:
            - ~/venv/bin/phantomjs

      - run:
          name: Set CircleCI configuration
          command: |
            cp discovery/local_settings.circle.py discovery/local_settings.py

      - run:
          name: Import fixtures and run test server
          background: true
          command: |
            source ~/venv/bin/activate
            scripts/init-server.sh /dev/stderr
            scripts/load-fixtures.sh
            ~/venv/bin/waitress-serve --expose-tracebacks --port=8080 discovery.wsgi:application

      - run:
          name: Run acceptance tests
          command: |
            source ~/venv/bin/activate
            git submodule update --init --recursive
            scripts/wait-for-it/wait-for-it.sh --host="localhost" --port=8080 --timeout=300
            ~/venv/bin/python manage.py test selenium_tests

      - store_artifacts:
          path: logs
          destination: acceptance-test-reports

  deploy-dev:
    docker:
      - image: circleci/python:2.7
        environment:
          CF_LOGIN_URL: 'https://api.fr.cloud.gov'

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.git

      - run:
          name: Setup CloudFoundry client CLI
          command: |
            bash -c "sudo scripts/setup-cf.sh /dev/stderr"

      - run:
          name: Deploy development applications
          command: |
            bash scripts/deploy-dev.sh

  deploy-prod:
    docker:
      - image: circleci/python:2.7
        environment:
          CF_LOGIN_URL: 'https://api.fr.cloud.gov'

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.git

      - run:
          name: Setup CloudFoundry client CLI
          command: |
            bash -c "sudo scripts/setup-cf.sh /dev/stderr"

      - run:
          name: Deploy production applications
          command: |
            bash scripts/deploy-prod.sh

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - unit-tests
      - acceptance-tests
      - deploy-dev:
          requires:
            - unit-tests
            - acceptance-tests
          filters:
            branches:
              only: develop
      - deploy-prod:
          requires:
            - unit-tests
            - acceptance-tests
          filters:
            branches:
              only: master
